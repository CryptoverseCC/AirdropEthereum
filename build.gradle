buildscript {
	ext {
		kotlinVersion = '1.2.20'
		springBootVersion = '2.0.0.RC1'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'io.userfeeds'
archivesBaseName = 'app'

sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile 'com.fasterxml.jackson.module:jackson-module-kotlin'
 	compile 'com.squareup.retrofit2:retrofit:2.3.0'
	compile 'com.squareup.retrofit2:converter-moshi:2.3.0'
	compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
	compile group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: '3.9.1'
	compile("org.jetbrains.kotlin:kotlin-stdlib-jre8")
	compile("org.jetbrains.kotlin:kotlin-reflect")
	compile("net.logstash.logback:logstash-logback-encoder:4.11")
	compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.9.1'
	compile group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.1.7'
	compile 'io.reactivex.rxjava2:rxkotlin:2.2.0'
	compile ('org.web3j:core:3.3.1')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile group: 'com.nhaarman', name: 'mockito-kotlin-kt1.1', version: '1.5.0'
	testCompile('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
}

task getDeps(type: Copy) {
  from sourceSets.main.runtimeClasspath
  from sourceSets.test.runtimeClasspath
  into 'runtime/'
}

